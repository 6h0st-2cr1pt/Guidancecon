"""
Django settings for myproject project.

Generated by 'django-sysadmin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from .env file (in root directory)
ROOT_DIR = BASE_DIR.parent
load_dotenv(ROOT_DIR / '.env')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'django-insecure-dev-key-2024-chmsu-guidance-connect-replace-in-production')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'True') == 'True'

#ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', 'testserver,localhost,127.0.0.1').split(',')
ALLOWED_HOSTS = [
    'guidancecon.onrender.com',
    'localhost',
    '127.0.0.1',
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'public',
    'sysadmin',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.template.context_processors.media',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
# Local PostgreSQL Database
#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql',
#        'NAME': os.environ.get('DB_NAME', 'guidance'),
#        'USER': os.environ.get('DB_USER', 'postgres'),
#        'PASSWORD': os.environ.get('DB_PASSWORD', 'sysadmin'),  # Set your DB password
#        'HOST': os.environ.get('DB_HOST', 'localhost'),
#        'PORT': os.environ.get('DB_PORT', '5432'),
#    }
#}

# Render.com PostgreSQL Database
#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql',
#        'NAME': os.environ.get('DB_NAME', 'guidance'),
#        'USER': os.environ.get('DB_USER', 'postgres'),
#        'PASSWORD': os.environ.get('DB_PASSWORD', 'sysadmin'),  # Set your DB password
#        'HOST': os.environ.get('DB_HOST', 'localhost'),
#        'PORT': os.environ.get('DB_PORT', '5432'),
#    }
#}

# For Supabase Database
#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql',
#        'NAME': os.getenv('DB_NAME'),
#        'USER': os.getenv('DB_USER'),
#        'PASSWORD': os.getenv('DB_PASSWORD'),
#        'HOST': os.getenv('DB_HOST'),
#        'PORT': os.getenv('DB_PORT'),
#        'OPTIONS': {'sslmode': 'require'},
#    }
#}

# dj-database-url config
DATABASES = {
    'default': dj_database_url.config(
        default=os.getenv(
            'DATABASE_URL',
            'postgresql://postgres:guidanceconsysadmin@db.xnxxeeylozzchxfodevy.supabase.co:5432/postgres'
        ),
        conn_max_age=600,
        ssl_require=True,
    )
}


# Authentication backends
AUTHENTICATION_BACKENDS = [
    'public.backends.StudentIDBackend',  # Try student ID first for public login
    'sysadmin.backends.EmailBackend',    # For admin email login
    'django.contrib.auth.backends.ModelBackend',  # Keep the default backend as fallback
]

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Email Configuration for Gmail
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', 'jonaldsabordo@gmail.com')
EMAIL_HOST_PASSWORD = os.environ['EMAIL_HOST_PASSWORD']  # No default, must be set
DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL', 'CHMSU Guidance Connect <jonaldsabordo@gmail.com>')
ADMIN_EMAIL = os.environ.get('ADMIN_EMAIL', 'jonaldsabordo@gmail.com')

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'public' / 'static',
    BASE_DIR / 'sysadmin' / 'static',
]

# Serve static files efficiently with WhiteNoise
MIDDLEWARE.insert(1, 'whitenoise.middleware.WhiteNoiseMiddleware')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


# Authentication settings
LOGIN_URL = '/sysadmin/login/'  # Default login URL (for staff)
LOGIN_REDIRECT_URL = '/sysadmin/dashboard/'  # Default redirect after login (for staff)
LOGOUT_REDIRECT_URL = '/sysadmin/login/'  # Default redirect after logout (for staff)

# Public app specific settings (these will be used by the LoginView in public app)
PUBLIC_LOGIN_URL = '/login/'
PUBLIC_LOGIN_REDIRECT_URL = '/dashboard/'  # Redirect to dashboard after public login
PUBLIC_LOGOUT_REDIRECT_URL = '/login/'

# Media files (uploaded assets like logos)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'sysadmin' / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
